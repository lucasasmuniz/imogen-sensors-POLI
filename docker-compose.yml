version: "3.8"

services:
  # ----------------------------------------------------
  # 1. SERVIÇO DA SUA APLICAÇÃO SPRING BOOT
  # ----------------------------------------------------
  app-service:
    build: .
    container_name: imogen-app
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - pg-docker
    networks:
      - dev-network
    # As variáveis são substituídas aqui pelo Docker Compose
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://pg-docker:5432/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: ${SPRING_JPA_HIBERNATE_DDL_AUTO}

  # ----------------------------------------------------
  # 2. SERVIÇO DO BANCO DE DADOS POSTGRESQL
  # ----------------------------------------------------
  pg-docker:
    image: postgres:14-alpine
    container_name: dev-postgresql
    # As variáveis são substituídas aqui também
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - ./.data/postgresql/data:/var/lib/postgresql/data
    networks:
      - dev-network

  # ----------------------------------------------------
  # 3. SERVIÇO DO PGADMIN (Ferramenta de Acesso ao Banco)
  # ----------------------------------------------------
  pgadmin-docker:
    image: dpage/pgadmin4
    container_name: dev-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: me@example.com
      PGADMIN_DEFAULT_PASSWORD: ${POSTGRES_PASSWORD} # Podemos reutilizar a senha do banco!
    ports:
      - "${PGADMIN_PORT}:80" # Usando a variável para a porta
    volumes:
      - ./.data/pgadmin:/var/lib/pgadmin
    depends_on:
      - pg-docker
    networks:
      - dev-network

networks:
  dev-network:
    driver: bridge